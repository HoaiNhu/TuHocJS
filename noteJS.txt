//Web=====================================================



//Nội dung=================================================

//Bài 1----------------------------------------------------
- alert: hiện thị thông báo dạng popup trên trình duyệt

- console.log: hiện nội dung trên console

//Bài 2----------------------------------------------------

- các cách nhúng code JS vào html
    1. internal nhúng trực tiếp vào thẻ script
    2. external: nhúng gián tiếp từ file js trong thuộc tính src của thẻ script

//Bài 3----------------------------------------------------

- hàm prompt: để hiển thị hộp thoại nhập liệu trên trình duyệt và chờ ng dùng nhập 1 giá trị 
    -> về cơ bản: 
        - dữ liệu vừa nhập sẽ biến mất và ko dc lưu vào bộ nhớ
        - 

- biến : là 1 ô nhớ trong bộ nhớ dc đặt tên và sử dụng để lưu giá trị

- 3 từ khóa khai báo biến
    1. var: trc ES6
    2. let: từ ES6
    3. const: khai báo hằng số: biến ko đổi giá trị sau khi gán

- khai báo biến: chỉ đặt trên

- khởi tạo biến: đặt tên và gán giá trị

- xuất giá trị: in giá trị dc lưu trong biến

//Bài 4----------------------------------------------------

- Quy tắc đặt tên biến

- Các kiểu dữ liệu nguyên thủy

    1. String: Kiểu chuỗi - Kiểu dữ liệu để lưu trữ chuỗi ký tự.
    Ví dụ: let myString = "Xin chào";

    2. Number: Kiểu số - Kiểu dữ liệu để lưu trữ số, có thể là số nguyên hoặc số thực.
    Ví dụ: let soNguyen = 10; và let soThuc = 3.14;

    3. Boolean: Kiểu luận lý - Chỉ có thể nhận giá trị true hoặc false.
    Ví dụ: let isTrue = true; và let isFalse = false;

    4. Undefined: Biến chưa được gán giá trị sẽ có kiểu dữ liệu là undefined.
    Ví dụ: let undefinedVariable;

    5. Null: Biến được gán giá trị là null. Thường dùng để reset biến, gán giá trị mặc định.
    Ví dụ: let nullValue = null;

- dùng typeof để kiểm tra kdl

//Bài 5----------------------------------------------------

- xuất dữ liệu vs Biến  
    1. dùng dấu + 
    2. dùng dấu ,
    3. console.log(`Căn bậc 2 của ${soA} là ${soB}`);
    4. console.log(`Căn bậc 2 của %s là %s`, soA, soB);